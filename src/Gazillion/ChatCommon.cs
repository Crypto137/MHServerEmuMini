// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
    #region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Gazillion {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class ChatCommon {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_Gazillion_ChatMessageAttachments__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatMessageAttachments, global::Gazillion.ChatMessageAttachments.Builder> internal__static_Gazillion_ChatMessageAttachments__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_ChatMessage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatMessage, global::Gazillion.ChatMessage.Builder> internal__static_Gazillion_ChatMessage__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ChatCommon() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBDaGF0Q29tbW9uLnByb3RvEglHYXppbGxpb24iYAoWQ2hhdE1lc3NhZ2VB", 
            "dHRhY2htZW50cxIiCgxhdHRhY2htbWVudHMYASADKAxSDGF0dGFjaG1tZW50", 
            "cxIiCgxlbW90ZURhdGFSZWYYAiABKANSDGVtb3RlRGF0YVJlZiJkCgtDaGF0", 
            "TWVzc2FnZRISCgRib2R5GAEgASgJUgRib2R5EkEKCmF0dGFjaG1lbnQYAiAB", 
            "KAsyIS5HYXppbGxpb24uQ2hhdE1lc3NhZ2VBdHRhY2htZW50c1IKYXR0YWNo", 
            "bWVudCrZAgoNQ2hhdFJvb21UeXBlcxIYChRDSEFUX1JPT01fVFlQRV9MT0NB", 
            "TBAAEhYKEkNIQVRfUk9PTV9UWVBFX1NBWRABEhgKFENIQVRfUk9PTV9UWVBF", 
            "X1BBUlRZEAISFwoTQ0hBVF9ST09NX1RZUEVfVEVMTBADEigKJENIQVRfUk9P", 
            "TV9UWVBFX0JST0FEQ0FTVF9BTExfU0VSVkVSUxAEEhkKFUNIQVRfUk9PTV9U", 
            "WVBFX1NPQ0lBTBAFEhgKFENIQVRfUk9PTV9UWVBFX1RSQURFEAYSFgoSQ0hB", 
            "VF9ST09NX1RZUEVfTEZHEAcSGAoUQ0hBVF9ST09NX1RZUEVfR1VJTEQQCBIa", 
            "ChZDSEFUX1JPT01fVFlQRV9GQUNUSU9OEAkSGAoUQ0hBVF9ST09NX1RZUEVf", 
            "RU1PVEUQChIcChhDSEFUX1JPT01fVFlQRV9OVU1fVFlQRVMQCypwChBHcm91", 
            "cExlYXZlUmVhc29uEhsKF0dST1VQX0xFQVZFX1JFQVNPTl9MRUZUEAESHQoZ", 
            "R1JPVVBfTEVBVkVfUkVBU09OX0JPT1RFRBACEiAKHEdST1VQX0xFQVZFX1JF", 
            "QVNPTl9ESVNCQU5ERUQQAypyChFDaGF0RXJyb3JNZXNzYWdlcxIbChdDSEFU", 
            "X0VSUk9SX05PX1NVQ0hfVVNFUhAAEiUKIUNIQVRfRVJST1JfQ09NTUFORF9O", 
          "T1RfUkVDT0dOSVpFRBABEhkKFUNIQVRfRVJST1JfTlVNX0VSUk9SUxAC"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Gazillion_ChatMessageAttachments__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Gazillion_ChatMessageAttachments__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatMessageAttachments, global::Gazillion.ChatMessageAttachments.Builder>(internal__static_Gazillion_ChatMessageAttachments__Descriptor,
                new string[] { "Attachmments", "EmoteDataRef", });
        internal__static_Gazillion_ChatMessage__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Gazillion_ChatMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatMessage, global::Gazillion.ChatMessage.Builder>(internal__static_Gazillion_ChatMessage__Descriptor,
                new string[] { "Body", "Attachment", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum ChatRoomTypes {
    CHAT_ROOM_TYPE_LOCAL = 0,
    CHAT_ROOM_TYPE_SAY = 1,
    CHAT_ROOM_TYPE_PARTY = 2,
    CHAT_ROOM_TYPE_TELL = 3,
    CHAT_ROOM_TYPE_BROADCAST_ALL_SERVERS = 4,
    CHAT_ROOM_TYPE_SOCIAL = 5,
    CHAT_ROOM_TYPE_TRADE = 6,
    CHAT_ROOM_TYPE_LFG = 7,
    CHAT_ROOM_TYPE_GUILD = 8,
    CHAT_ROOM_TYPE_FACTION = 9,
    CHAT_ROOM_TYPE_EMOTE = 10,
    CHAT_ROOM_TYPE_NUM_TYPES = 11,
  }
  
  public enum GroupLeaveReason {
    GROUP_LEAVE_REASON_LEFT = 1,
    GROUP_LEAVE_REASON_BOOTED = 2,
    GROUP_LEAVE_REASON_DISBANDED = 3,
  }
  
  public enum ChatErrorMessages {
    CHAT_ERROR_NO_SUCH_USER = 0,
    CHAT_ERROR_COMMAND_NOT_RECOGNIZED = 1,
    CHAT_ERROR_NUM_ERRORS = 2,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatMessageAttachments : pb::GeneratedMessage<ChatMessageAttachments, ChatMessageAttachments.Builder> {
    private ChatMessageAttachments() { }
    private static readonly ChatMessageAttachments defaultInstance = new ChatMessageAttachments().MakeReadOnly();
    private static readonly string[] _chatMessageAttachmentsFieldNames = new string[] { "attachmments", "emoteDataRef" };
    private static readonly uint[] _chatMessageAttachmentsFieldTags = new uint[] { 10, 16 };
    public static ChatMessageAttachments DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChatMessageAttachments DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChatMessageAttachments ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.ChatCommon.internal__static_Gazillion_ChatMessageAttachments__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChatMessageAttachments, ChatMessageAttachments.Builder> InternalFieldAccessors {
      get { return global::Gazillion.ChatCommon.internal__static_Gazillion_ChatMessageAttachments__FieldAccessorTable; }
    }
    
    public const int AttachmmentsFieldNumber = 1;
    private pbc::PopsicleList<pb::ByteString> attachmments_ = new pbc::PopsicleList<pb::ByteString>();
    public scg::IList<pb::ByteString> AttachmmentsList {
      get { return pbc::Lists.AsReadOnly(attachmments_); }
    }
    public int AttachmmentsCount {
      get { return attachmments_.Count; }
    }
    public pb::ByteString GetAttachmments(int index) {
      return attachmments_[index];
    }
    
    public const int EmoteDataRefFieldNumber = 2;
    private bool hasEmoteDataRef;
    private long emoteDataRef_;
    public bool HasEmoteDataRef {
      get { return hasEmoteDataRef; }
    }
    public long EmoteDataRef {
      get { return emoteDataRef_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chatMessageAttachmentsFieldNames;
      if (attachmments_.Count > 0) {
        output.WriteBytesArray(1, field_names[0], attachmments_);
      }
      if (hasEmoteDataRef) {
        output.WriteInt64(2, field_names[1], EmoteDataRef);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (pb::ByteString element in AttachmmentsList) {
          dataSize += pb::CodedOutputStream.ComputeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * attachmments_.Count;
      }
      if (hasEmoteDataRef) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, EmoteDataRef);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ChatMessageAttachments ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatMessageAttachments ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatMessageAttachments ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatMessageAttachments ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatMessageAttachments ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatMessageAttachments ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChatMessageAttachments ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChatMessageAttachments ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChatMessageAttachments ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatMessageAttachments ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChatMessageAttachments MakeReadOnly() {
      attachmments_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChatMessageAttachments prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChatMessageAttachments, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChatMessageAttachments cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChatMessageAttachments result;
      
      private ChatMessageAttachments PrepareBuilder() {
        if (resultIsReadOnly) {
          ChatMessageAttachments original = result;
          result = new ChatMessageAttachments();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChatMessageAttachments MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.ChatMessageAttachments.Descriptor; }
      }
      
      public override ChatMessageAttachments DefaultInstanceForType {
        get { return global::Gazillion.ChatMessageAttachments.DefaultInstance; }
      }
      
      public override ChatMessageAttachments BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChatMessageAttachments) {
          return MergeFrom((ChatMessageAttachments) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChatMessageAttachments other) {
        if (other == global::Gazillion.ChatMessageAttachments.DefaultInstance) return this;
        PrepareBuilder();
        if (other.attachmments_.Count != 0) {
          result.attachmments_.Add(other.attachmments_);
        }
        if (other.HasEmoteDataRef) {
          EmoteDataRef = other.EmoteDataRef;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatMessageAttachmentsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatMessageAttachmentsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadBytesArray(tag, field_name, result.attachmments_);
              break;
            }
            case 16: {
              result.hasEmoteDataRef = input.ReadInt64(ref result.emoteDataRef_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<pb::ByteString> AttachmmentsList {
        get { return PrepareBuilder().attachmments_; }
      }
      public int AttachmmentsCount {
        get { return result.AttachmmentsCount; }
      }
      public pb::ByteString GetAttachmments(int index) {
        return result.GetAttachmments(index);
      }
      public Builder SetAttachmments(int index, pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attachmments_[index] = value;
        return this;
      }
      public Builder AddAttachmments(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attachmments_.Add(value);
        return this;
      }
      public Builder AddRangeAttachmments(scg::IEnumerable<pb::ByteString> values) {
        PrepareBuilder();
        result.attachmments_.Add(values);
        return this;
      }
      public Builder ClearAttachmments() {
        PrepareBuilder();
        result.attachmments_.Clear();
        return this;
      }
      
      public bool HasEmoteDataRef {
        get { return result.hasEmoteDataRef; }
      }
      public long EmoteDataRef {
        get { return result.EmoteDataRef; }
        set { SetEmoteDataRef(value); }
      }
      public Builder SetEmoteDataRef(long value) {
        PrepareBuilder();
        result.hasEmoteDataRef = true;
        result.emoteDataRef_ = value;
        return this;
      }
      public Builder ClearEmoteDataRef() {
        PrepareBuilder();
        result.hasEmoteDataRef = false;
        result.emoteDataRef_ = 0L;
        return this;
      }
    }
    static ChatMessageAttachments() {
      object.ReferenceEquals(global::Gazillion.ChatCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatMessage : pb::GeneratedMessage<ChatMessage, ChatMessage.Builder> {
    private ChatMessage() { }
    private static readonly ChatMessage defaultInstance = new ChatMessage().MakeReadOnly();
    private static readonly string[] _chatMessageFieldNames = new string[] { "attachment", "body" };
    private static readonly uint[] _chatMessageFieldTags = new uint[] { 18, 10 };
    public static ChatMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChatMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChatMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.ChatCommon.internal__static_Gazillion_ChatMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChatMessage, ChatMessage.Builder> InternalFieldAccessors {
      get { return global::Gazillion.ChatCommon.internal__static_Gazillion_ChatMessage__FieldAccessorTable; }
    }
    
    public const int BodyFieldNumber = 1;
    private bool hasBody;
    private string body_ = "";
    public bool HasBody {
      get { return hasBody; }
    }
    public string Body {
      get { return body_; }
    }
    
    public const int AttachmentFieldNumber = 2;
    private bool hasAttachment;
    private global::Gazillion.ChatMessageAttachments attachment_;
    public bool HasAttachment {
      get { return hasAttachment; }
    }
    public global::Gazillion.ChatMessageAttachments Attachment {
      get { return attachment_ ?? global::Gazillion.ChatMessageAttachments.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chatMessageFieldNames;
      if (hasBody) {
        output.WriteString(1, field_names[1], Body);
      }
      if (hasAttachment) {
        output.WriteMessage(2, field_names[0], Attachment);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasBody) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Body);
      }
      if (hasAttachment) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Attachment);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ChatMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChatMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChatMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChatMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChatMessage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChatMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChatMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChatMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChatMessage result;
      
      private ChatMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          ChatMessage original = result;
          result = new ChatMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChatMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.ChatMessage.Descriptor; }
      }
      
      public override ChatMessage DefaultInstanceForType {
        get { return global::Gazillion.ChatMessage.DefaultInstance; }
      }
      
      public override ChatMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChatMessage) {
          return MergeFrom((ChatMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChatMessage other) {
        if (other == global::Gazillion.ChatMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBody) {
          Body = other.Body;
        }
        if (other.HasAttachment) {
          MergeAttachment(other.Attachment);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasBody = input.ReadString(ref result.body_);
              break;
            }
            case 18: {
              global::Gazillion.ChatMessageAttachments.Builder subBuilder = global::Gazillion.ChatMessageAttachments.CreateBuilder();
              if (result.hasAttachment) {
                subBuilder.MergeFrom(Attachment);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Attachment = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBody {
        get { return result.hasBody; }
      }
      public string Body {
        get { return result.Body; }
        set { SetBody(value); }
      }
      public Builder SetBody(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBody = true;
        result.body_ = value;
        return this;
      }
      public Builder ClearBody() {
        PrepareBuilder();
        result.hasBody = false;
        result.body_ = "";
        return this;
      }
      
      public bool HasAttachment {
       get { return result.hasAttachment; }
      }
      public global::Gazillion.ChatMessageAttachments Attachment {
        get { return result.Attachment; }
        set { SetAttachment(value); }
      }
      public Builder SetAttachment(global::Gazillion.ChatMessageAttachments value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAttachment = true;
        result.attachment_ = value;
        return this;
      }
      public Builder SetAttachment(global::Gazillion.ChatMessageAttachments.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAttachment = true;
        result.attachment_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAttachment(global::Gazillion.ChatMessageAttachments value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAttachment &&
            result.attachment_ != global::Gazillion.ChatMessageAttachments.DefaultInstance) {
            result.attachment_ = global::Gazillion.ChatMessageAttachments.CreateBuilder(result.attachment_).MergeFrom(value).BuildPartial();
        } else {
          result.attachment_ = value;
        }
        result.hasAttachment = true;
        return this;
      }
      public Builder ClearAttachment() {
        PrepareBuilder();
        result.hasAttachment = false;
        result.attachment_ = null;
        return this;
      }
    }
    static ChatMessage() {
      object.ReferenceEquals(global::Gazillion.ChatCommon.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
