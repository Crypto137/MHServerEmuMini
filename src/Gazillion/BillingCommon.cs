// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Gazillion {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class BillingCommon {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_Gazillion_MHCatalogEntryType__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHCatalogEntryType, global::Gazillion.MHCatalogEntryType.Builder> internal__static_Gazillion_MHCatalogEntryType__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_MHCatalogEntryTypeModifier__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHCatalogEntryTypeModifier, global::Gazillion.MHCatalogEntryTypeModifier.Builder> internal__static_Gazillion_MHCatalogEntryTypeModifier__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_MHBannerUrl__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHBannerUrl, global::Gazillion.MHBannerUrl.Builder> internal__static_Gazillion_MHBannerUrl__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_MHLocalizedCatalogUrls__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHLocalizedCatalogUrls, global::Gazillion.MHLocalizedCatalogUrls.Builder> internal__static_Gazillion_MHLocalizedCatalogUrls__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_MHLocalizedCatalogEntry__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHLocalizedCatalogEntry, global::Gazillion.MHLocalizedCatalogEntry.Builder> internal__static_Gazillion_MHLocalizedCatalogEntry__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_MarvelHeroesCatalogEntry__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.MarvelHeroesCatalogEntry, global::Gazillion.MarvelHeroesCatalogEntry.Builder> internal__static_Gazillion_MarvelHeroesCatalogEntry__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static BillingCommon() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNCaWxsaW5nQ29tbW9uLnByb3RvEglHYXppbGxpb24iPgoSTUhDYXRhbG9n", 
            "RW50cnlUeXBlEhIKBG5hbWUYASACKAlSBG5hbWUSFAoFb3JkZXIYAiACKAVS", 
            "BW9yZGVyIkYKGk1IQ2F0YWxvZ0VudHJ5VHlwZU1vZGlmaWVyEhIKBG5hbWUY", 
            "ASACKAlSBG5hbWUSFAoFb3JkZXIYAiACKAVSBW9yZGVyIjMKC01IQmFubmVy", 
            "VXJsEhIKBHR5cGUYASACKAlSBHR5cGUSEAoDdXJsGAIgAigJUgN1cmwi2AEK", 
            "Fk1ITG9jYWxpemVkQ2F0YWxvZ1VybHMSGgoIbG9jYWxlSWQYASACKAlSCGxv", 
            "Y2FsZUlkEioKEHN0b3JlSG9tZVBhZ2VVcmwYAiABKAlSEHN0b3JlSG9tZVBh", 
            "Z2VVcmwSSAoTc3RvcmVCYW5uZXJQYWdlVXJscxgDIAMoCzIWLkdhemlsbGlv", 
            "bi5NSEJhbm5lclVybFITc3RvcmVCYW5uZXJQYWdlVXJscxIsChFzdG9yZVJl", 
            "YWxNb25leVVybBgEIAEoCVIRc3RvcmVSZWFsTW9uZXlVcmwi0AEKF01ITG9j", 
            "YWxpemVkQ2F0YWxvZ0VudHJ5Eh8KC2xhbmd1YWdlX2lkGAEgAigJUgpsYW5n", 
            "dWFnZUlkEiAKC2Rlc2NyaXB0aW9uGAIgASgJUgtkZXNjcmlwdGlvbhIUCgV0", 
            "aXRsZRgDIAEoCVIFdGl0bGUSHAoJaW1hZ2VkYXRhGAQgASgMUglpbWFnZWRh", 
            "dGESIAoLcmVsZWFzZURhdGUYBSABKAlSC3JlbGVhc2VEYXRlEhwKCWl0ZW1Q", 
            "cmljZRgGIAIoA1IJaXRlbVByaWNlIvoCChhNYXJ2ZWxIZXJvZXNDYXRhbG9n", 
            "RW50cnkSFAoFc2t1SWQYASACKANSBXNrdUlkEi4KEml0ZW1Qcm90b3R5cGVH", 
            "dWlkcxgDIAMoBFISaXRlbVByb3RvdHlwZUd1aWRzEkoKIGl0ZW1Qcm90b3R5", 
            "cGVSdW50aW1lSWRzRm9yQ2xpZW50GAggAygEUiBpdGVtUHJvdG90eXBlUnVu", 
            "dGltZUlkc0ZvckNsaWVudBJOChBsb2NhbGl6ZWRFbnRyaWVzGAUgAygLMiIu", 
            "R2F6aWxsaW9uLk1ITG9jYWxpemVkQ2F0YWxvZ0VudHJ5UhBsb2NhbGl6ZWRF", 
            "bnRyaWVzEjEKBHR5cGUYBiABKAsyHS5HYXppbGxpb24uTUhDYXRhbG9nRW50", 
            "cnlUeXBlUgR0eXBlEkkKDHR5cGVNb2RpZmllchgHIAMoCzIlLkdhemlsbGlv", 
            "bi5NSENhdGFsb2dFbnRyeVR5cGVNb2RpZmllclIMdHlwZU1vZGlmaWVyKoQC", 
            "ChdCdXlJdGVtUmVzdWx0RXJyb3JDb2RlcxIcChhCVVlfUkVTVUxUX0VSUk9S", 
            "X1NVQ0NFU1MQABIoCiRCVVlfUkVTVUxUX0VSUk9SX0FMUkVBRFlfSEFWRV9B", 
            "VkFUQVIQARIrCidCVVlfUkVTVUxUX0VSUk9SX0FMUkVBRFlfSEFWRV9TVEFT", 
            "SF9JTlYQAhIrCidCVVlfUkVTVUxUX0VSUk9SX0FMUkVBRFlfSEFWRV9QRVJN", 
            "QUJVRkYQAxIpCiVCVVlfUkVTVUxUX0VSUk9SX0lOU1VGRklDSUVOVF9CQUxB", 
          "TkNFEAQSHAoYQlVZX1JFU1VMVF9FUlJPUl9VTktOT1dOEAU="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Gazillion_MHCatalogEntryType__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Gazillion_MHCatalogEntryType__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHCatalogEntryType, global::Gazillion.MHCatalogEntryType.Builder>(internal__static_Gazillion_MHCatalogEntryType__Descriptor,
                new string[] { "Name", "Order", });
        internal__static_Gazillion_MHCatalogEntryTypeModifier__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Gazillion_MHCatalogEntryTypeModifier__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHCatalogEntryTypeModifier, global::Gazillion.MHCatalogEntryTypeModifier.Builder>(internal__static_Gazillion_MHCatalogEntryTypeModifier__Descriptor,
                new string[] { "Name", "Order", });
        internal__static_Gazillion_MHBannerUrl__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Gazillion_MHBannerUrl__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHBannerUrl, global::Gazillion.MHBannerUrl.Builder>(internal__static_Gazillion_MHBannerUrl__Descriptor,
                new string[] { "Type", "Url", });
        internal__static_Gazillion_MHLocalizedCatalogUrls__Descriptor = Descriptor.MessageTypes[3];
        internal__static_Gazillion_MHLocalizedCatalogUrls__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHLocalizedCatalogUrls, global::Gazillion.MHLocalizedCatalogUrls.Builder>(internal__static_Gazillion_MHLocalizedCatalogUrls__Descriptor,
                new string[] { "LocaleId", "StoreHomePageUrl", "StoreBannerPageUrls", "StoreRealMoneyUrl", });
        internal__static_Gazillion_MHLocalizedCatalogEntry__Descriptor = Descriptor.MessageTypes[4];
        internal__static_Gazillion_MHLocalizedCatalogEntry__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHLocalizedCatalogEntry, global::Gazillion.MHLocalizedCatalogEntry.Builder>(internal__static_Gazillion_MHLocalizedCatalogEntry__Descriptor,
                new string[] { "LanguageId", "Description", "Title", "Imagedata", "ReleaseDate", "ItemPrice", });
        internal__static_Gazillion_MarvelHeroesCatalogEntry__Descriptor = Descriptor.MessageTypes[5];
        internal__static_Gazillion_MarvelHeroesCatalogEntry__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.MarvelHeroesCatalogEntry, global::Gazillion.MarvelHeroesCatalogEntry.Builder>(internal__static_Gazillion_MarvelHeroesCatalogEntry__Descriptor,
                new string[] { "SkuId", "ItemPrototypeGuids", "ItemPrototypeRuntimeIdsForClient", "LocalizedEntries", "Type", "TypeModifier", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum BuyItemResultErrorCodes {
    BUY_RESULT_ERROR_SUCCESS = 0,
    BUY_RESULT_ERROR_ALREADY_HAVE_AVATAR = 1,
    BUY_RESULT_ERROR_ALREADY_HAVE_STASH_INV = 2,
    BUY_RESULT_ERROR_ALREADY_HAVE_PERMABUFF = 3,
    BUY_RESULT_ERROR_INSUFFICIENT_BALANCE = 4,
    BUY_RESULT_ERROR_UNKNOWN = 5,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MHCatalogEntryType : pb::GeneratedMessage<MHCatalogEntryType, MHCatalogEntryType.Builder> {
    private MHCatalogEntryType() { }
    private static readonly MHCatalogEntryType defaultInstance = new MHCatalogEntryType().MakeReadOnly();
    private static readonly string[] _mHCatalogEntryTypeFieldNames = new string[] { "name", "order" };
    private static readonly uint[] _mHCatalogEntryTypeFieldTags = new uint[] { 10, 16 };
    public static MHCatalogEntryType DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MHCatalogEntryType DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MHCatalogEntryType ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHCatalogEntryType__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MHCatalogEntryType, MHCatalogEntryType.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHCatalogEntryType__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int OrderFieldNumber = 2;
    private bool hasOrder;
    private int order_;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public int Order {
      get { return order_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        if (!hasOrder) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _mHCatalogEntryTypeFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[0], Name);
      }
      if (hasOrder) {
        output.WriteInt32(2, field_names[1], Order);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasOrder) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Order);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MHCatalogEntryType ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHCatalogEntryType ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHCatalogEntryType ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHCatalogEntryType ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHCatalogEntryType ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHCatalogEntryType ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MHCatalogEntryType ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MHCatalogEntryType ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MHCatalogEntryType ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHCatalogEntryType ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MHCatalogEntryType MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MHCatalogEntryType prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MHCatalogEntryType, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MHCatalogEntryType cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MHCatalogEntryType result;
      
      private MHCatalogEntryType PrepareBuilder() {
        if (resultIsReadOnly) {
          MHCatalogEntryType original = result;
          result = new MHCatalogEntryType();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MHCatalogEntryType MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.MHCatalogEntryType.Descriptor; }
      }
      
      public override MHCatalogEntryType DefaultInstanceForType {
        get { return global::Gazillion.MHCatalogEntryType.DefaultInstance; }
      }
      
      public override MHCatalogEntryType BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MHCatalogEntryType) {
          return MergeFrom((MHCatalogEntryType) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MHCatalogEntryType other) {
        if (other == global::Gazillion.MHCatalogEntryType.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasOrder) {
          Order = other.Order;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_mHCatalogEntryTypeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _mHCatalogEntryTypeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 16: {
              result.hasOrder = input.ReadInt32(ref result.order_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasOrder {
        get { return result.hasOrder; }
      }
      public int Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(int value) {
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder ClearOrder() {
        PrepareBuilder();
        result.hasOrder = false;
        result.order_ = 0;
        return this;
      }
    }
    static MHCatalogEntryType() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MHCatalogEntryTypeModifier : pb::GeneratedMessage<MHCatalogEntryTypeModifier, MHCatalogEntryTypeModifier.Builder> {
    private MHCatalogEntryTypeModifier() { }
    private static readonly MHCatalogEntryTypeModifier defaultInstance = new MHCatalogEntryTypeModifier().MakeReadOnly();
    private static readonly string[] _mHCatalogEntryTypeModifierFieldNames = new string[] { "name", "order" };
    private static readonly uint[] _mHCatalogEntryTypeModifierFieldTags = new uint[] { 10, 16 };
    public static MHCatalogEntryTypeModifier DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MHCatalogEntryTypeModifier DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MHCatalogEntryTypeModifier ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHCatalogEntryTypeModifier__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MHCatalogEntryTypeModifier, MHCatalogEntryTypeModifier.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHCatalogEntryTypeModifier__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int OrderFieldNumber = 2;
    private bool hasOrder;
    private int order_;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public int Order {
      get { return order_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        if (!hasOrder) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _mHCatalogEntryTypeModifierFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[0], Name);
      }
      if (hasOrder) {
        output.WriteInt32(2, field_names[1], Order);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasOrder) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Order);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MHCatalogEntryTypeModifier ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHCatalogEntryTypeModifier ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHCatalogEntryTypeModifier ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHCatalogEntryTypeModifier ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHCatalogEntryTypeModifier ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHCatalogEntryTypeModifier ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MHCatalogEntryTypeModifier ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MHCatalogEntryTypeModifier ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MHCatalogEntryTypeModifier ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHCatalogEntryTypeModifier ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MHCatalogEntryTypeModifier MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MHCatalogEntryTypeModifier prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MHCatalogEntryTypeModifier, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MHCatalogEntryTypeModifier cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MHCatalogEntryTypeModifier result;
      
      private MHCatalogEntryTypeModifier PrepareBuilder() {
        if (resultIsReadOnly) {
          MHCatalogEntryTypeModifier original = result;
          result = new MHCatalogEntryTypeModifier();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MHCatalogEntryTypeModifier MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.MHCatalogEntryTypeModifier.Descriptor; }
      }
      
      public override MHCatalogEntryTypeModifier DefaultInstanceForType {
        get { return global::Gazillion.MHCatalogEntryTypeModifier.DefaultInstance; }
      }
      
      public override MHCatalogEntryTypeModifier BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MHCatalogEntryTypeModifier) {
          return MergeFrom((MHCatalogEntryTypeModifier) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MHCatalogEntryTypeModifier other) {
        if (other == global::Gazillion.MHCatalogEntryTypeModifier.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasOrder) {
          Order = other.Order;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_mHCatalogEntryTypeModifierFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _mHCatalogEntryTypeModifierFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 16: {
              result.hasOrder = input.ReadInt32(ref result.order_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasOrder {
        get { return result.hasOrder; }
      }
      public int Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(int value) {
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder ClearOrder() {
        PrepareBuilder();
        result.hasOrder = false;
        result.order_ = 0;
        return this;
      }
    }
    static MHCatalogEntryTypeModifier() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MHBannerUrl : pb::GeneratedMessage<MHBannerUrl, MHBannerUrl.Builder> {
    private MHBannerUrl() { }
    private static readonly MHBannerUrl defaultInstance = new MHBannerUrl().MakeReadOnly();
    private static readonly string[] _mHBannerUrlFieldNames = new string[] { "type", "url" };
    private static readonly uint[] _mHBannerUrlFieldTags = new uint[] { 10, 18 };
    public static MHBannerUrl DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MHBannerUrl DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MHBannerUrl ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHBannerUrl__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MHBannerUrl, MHBannerUrl.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHBannerUrl__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private string type_ = "";
    public bool HasType {
      get { return hasType; }
    }
    public string Type {
      get { return type_; }
    }
    
    public const int UrlFieldNumber = 2;
    private bool hasUrl;
    private string url_ = "";
    public bool HasUrl {
      get { return hasUrl; }
    }
    public string Url {
      get { return url_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        if (!hasUrl) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _mHBannerUrlFieldNames;
      if (hasType) {
        output.WriteString(1, field_names[0], Type);
      }
      if (hasUrl) {
        output.WriteString(2, field_names[1], Url);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Type);
      }
      if (hasUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Url);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MHBannerUrl ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHBannerUrl ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHBannerUrl ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHBannerUrl ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHBannerUrl ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHBannerUrl ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MHBannerUrl ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MHBannerUrl ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MHBannerUrl ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHBannerUrl ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MHBannerUrl MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MHBannerUrl prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MHBannerUrl, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MHBannerUrl cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MHBannerUrl result;
      
      private MHBannerUrl PrepareBuilder() {
        if (resultIsReadOnly) {
          MHBannerUrl original = result;
          result = new MHBannerUrl();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MHBannerUrl MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.MHBannerUrl.Descriptor; }
      }
      
      public override MHBannerUrl DefaultInstanceForType {
        get { return global::Gazillion.MHBannerUrl.DefaultInstance; }
      }
      
      public override MHBannerUrl BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MHBannerUrl) {
          return MergeFrom((MHBannerUrl) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MHBannerUrl other) {
        if (other == global::Gazillion.MHBannerUrl.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasUrl) {
          Url = other.Url;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_mHBannerUrlFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _mHBannerUrlFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasType = input.ReadString(ref result.type_);
              break;
            }
            case 18: {
              result.hasUrl = input.ReadString(ref result.url_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
        get { return result.hasType; }
      }
      public string Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = "";
        return this;
      }
      
      public bool HasUrl {
        get { return result.hasUrl; }
      }
      public string Url {
        get { return result.Url; }
        set { SetUrl(value); }
      }
      public Builder SetUrl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUrl = true;
        result.url_ = value;
        return this;
      }
      public Builder ClearUrl() {
        PrepareBuilder();
        result.hasUrl = false;
        result.url_ = "";
        return this;
      }
    }
    static MHBannerUrl() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MHLocalizedCatalogUrls : pb::GeneratedMessage<MHLocalizedCatalogUrls, MHLocalizedCatalogUrls.Builder> {
    private MHLocalizedCatalogUrls() { }
    private static readonly MHLocalizedCatalogUrls defaultInstance = new MHLocalizedCatalogUrls().MakeReadOnly();
    private static readonly string[] _mHLocalizedCatalogUrlsFieldNames = new string[] { "localeId", "storeBannerPageUrls", "storeHomePageUrl", "storeRealMoneyUrl" };
    private static readonly uint[] _mHLocalizedCatalogUrlsFieldTags = new uint[] { 10, 26, 18, 34 };
    public static MHLocalizedCatalogUrls DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MHLocalizedCatalogUrls DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MHLocalizedCatalogUrls ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHLocalizedCatalogUrls__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MHLocalizedCatalogUrls, MHLocalizedCatalogUrls.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHLocalizedCatalogUrls__FieldAccessorTable; }
    }
    
    public const int LocaleIdFieldNumber = 1;
    private bool hasLocaleId;
    private string localeId_ = "";
    public bool HasLocaleId {
      get { return hasLocaleId; }
    }
    public string LocaleId {
      get { return localeId_; }
    }
    
    public const int StoreHomePageUrlFieldNumber = 2;
    private bool hasStoreHomePageUrl;
    private string storeHomePageUrl_ = "";
    public bool HasStoreHomePageUrl {
      get { return hasStoreHomePageUrl; }
    }
    public string StoreHomePageUrl {
      get { return storeHomePageUrl_; }
    }
    
    public const int StoreBannerPageUrlsFieldNumber = 3;
    private pbc::PopsicleList<global::Gazillion.MHBannerUrl> storeBannerPageUrls_ = new pbc::PopsicleList<global::Gazillion.MHBannerUrl>();
    public scg::IList<global::Gazillion.MHBannerUrl> StoreBannerPageUrlsList {
      get { return storeBannerPageUrls_; }
    }
    public int StoreBannerPageUrlsCount {
      get { return storeBannerPageUrls_.Count; }
    }
    public global::Gazillion.MHBannerUrl GetStoreBannerPageUrls(int index) {
      return storeBannerPageUrls_[index];
    }
    
    public const int StoreRealMoneyUrlFieldNumber = 4;
    private bool hasStoreRealMoneyUrl;
    private string storeRealMoneyUrl_ = "";
    public bool HasStoreRealMoneyUrl {
      get { return hasStoreRealMoneyUrl; }
    }
    public string StoreRealMoneyUrl {
      get { return storeRealMoneyUrl_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasLocaleId) return false;
        foreach (global::Gazillion.MHBannerUrl element in StoreBannerPageUrlsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _mHLocalizedCatalogUrlsFieldNames;
      if (hasLocaleId) {
        output.WriteString(1, field_names[0], LocaleId);
      }
      if (hasStoreHomePageUrl) {
        output.WriteString(2, field_names[2], StoreHomePageUrl);
      }
      if (storeBannerPageUrls_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], storeBannerPageUrls_);
      }
      if (hasStoreRealMoneyUrl) {
        output.WriteString(4, field_names[3], StoreRealMoneyUrl);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLocaleId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, LocaleId);
      }
      if (hasStoreHomePageUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(2, StoreHomePageUrl);
      }
      foreach (global::Gazillion.MHBannerUrl element in StoreBannerPageUrlsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      if (hasStoreRealMoneyUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(4, StoreRealMoneyUrl);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MHLocalizedCatalogUrls ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHLocalizedCatalogUrls ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHLocalizedCatalogUrls ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHLocalizedCatalogUrls ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHLocalizedCatalogUrls ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHLocalizedCatalogUrls ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MHLocalizedCatalogUrls ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MHLocalizedCatalogUrls ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MHLocalizedCatalogUrls ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHLocalizedCatalogUrls ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MHLocalizedCatalogUrls MakeReadOnly() {
      storeBannerPageUrls_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MHLocalizedCatalogUrls prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MHLocalizedCatalogUrls, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MHLocalizedCatalogUrls cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MHLocalizedCatalogUrls result;
      
      private MHLocalizedCatalogUrls PrepareBuilder() {
        if (resultIsReadOnly) {
          MHLocalizedCatalogUrls original = result;
          result = new MHLocalizedCatalogUrls();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MHLocalizedCatalogUrls MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.MHLocalizedCatalogUrls.Descriptor; }
      }
      
      public override MHLocalizedCatalogUrls DefaultInstanceForType {
        get { return global::Gazillion.MHLocalizedCatalogUrls.DefaultInstance; }
      }
      
      public override MHLocalizedCatalogUrls BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MHLocalizedCatalogUrls) {
          return MergeFrom((MHLocalizedCatalogUrls) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MHLocalizedCatalogUrls other) {
        if (other == global::Gazillion.MHLocalizedCatalogUrls.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLocaleId) {
          LocaleId = other.LocaleId;
        }
        if (other.HasStoreHomePageUrl) {
          StoreHomePageUrl = other.StoreHomePageUrl;
        }
        if (other.storeBannerPageUrls_.Count != 0) {
          result.storeBannerPageUrls_.Add(other.storeBannerPageUrls_);
        }
        if (other.HasStoreRealMoneyUrl) {
          StoreRealMoneyUrl = other.StoreRealMoneyUrl;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_mHLocalizedCatalogUrlsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _mHLocalizedCatalogUrlsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLocaleId = input.ReadString(ref result.localeId_);
              break;
            }
            case 18: {
              result.hasStoreHomePageUrl = input.ReadString(ref result.storeHomePageUrl_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.storeBannerPageUrls_, global::Gazillion.MHBannerUrl.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              result.hasStoreRealMoneyUrl = input.ReadString(ref result.storeRealMoneyUrl_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLocaleId {
        get { return result.hasLocaleId; }
      }
      public string LocaleId {
        get { return result.LocaleId; }
        set { SetLocaleId(value); }
      }
      public Builder SetLocaleId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLocaleId = true;
        result.localeId_ = value;
        return this;
      }
      public Builder ClearLocaleId() {
        PrepareBuilder();
        result.hasLocaleId = false;
        result.localeId_ = "";
        return this;
      }
      
      public bool HasStoreHomePageUrl {
        get { return result.hasStoreHomePageUrl; }
      }
      public string StoreHomePageUrl {
        get { return result.StoreHomePageUrl; }
        set { SetStoreHomePageUrl(value); }
      }
      public Builder SetStoreHomePageUrl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStoreHomePageUrl = true;
        result.storeHomePageUrl_ = value;
        return this;
      }
      public Builder ClearStoreHomePageUrl() {
        PrepareBuilder();
        result.hasStoreHomePageUrl = false;
        result.storeHomePageUrl_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::Gazillion.MHBannerUrl> StoreBannerPageUrlsList {
        get { return PrepareBuilder().storeBannerPageUrls_; }
      }
      public int StoreBannerPageUrlsCount {
        get { return result.StoreBannerPageUrlsCount; }
      }
      public global::Gazillion.MHBannerUrl GetStoreBannerPageUrls(int index) {
        return result.GetStoreBannerPageUrls(index);
      }
      public Builder SetStoreBannerPageUrls(int index, global::Gazillion.MHBannerUrl value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.storeBannerPageUrls_[index] = value;
        return this;
      }
      public Builder SetStoreBannerPageUrls(int index, global::Gazillion.MHBannerUrl.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.storeBannerPageUrls_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStoreBannerPageUrls(global::Gazillion.MHBannerUrl value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.storeBannerPageUrls_.Add(value);
        return this;
      }
      public Builder AddStoreBannerPageUrls(global::Gazillion.MHBannerUrl.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.storeBannerPageUrls_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStoreBannerPageUrls(scg::IEnumerable<global::Gazillion.MHBannerUrl> values) {
        PrepareBuilder();
        result.storeBannerPageUrls_.Add(values);
        return this;
      }
      public Builder ClearStoreBannerPageUrls() {
        PrepareBuilder();
        result.storeBannerPageUrls_.Clear();
        return this;
      }
      
      public bool HasStoreRealMoneyUrl {
        get { return result.hasStoreRealMoneyUrl; }
      }
      public string StoreRealMoneyUrl {
        get { return result.StoreRealMoneyUrl; }
        set { SetStoreRealMoneyUrl(value); }
      }
      public Builder SetStoreRealMoneyUrl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStoreRealMoneyUrl = true;
        result.storeRealMoneyUrl_ = value;
        return this;
      }
      public Builder ClearStoreRealMoneyUrl() {
        PrepareBuilder();
        result.hasStoreRealMoneyUrl = false;
        result.storeRealMoneyUrl_ = "";
        return this;
      }
    }
    static MHLocalizedCatalogUrls() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MHLocalizedCatalogEntry : pb::GeneratedMessage<MHLocalizedCatalogEntry, MHLocalizedCatalogEntry.Builder> {
    private MHLocalizedCatalogEntry() { }
    private static readonly MHLocalizedCatalogEntry defaultInstance = new MHLocalizedCatalogEntry().MakeReadOnly();
    private static readonly string[] _mHLocalizedCatalogEntryFieldNames = new string[] { "description", "imagedata", "itemPrice", "language_id", "releaseDate", "title" };
    private static readonly uint[] _mHLocalizedCatalogEntryFieldTags = new uint[] { 18, 34, 48, 10, 42, 26 };
    public static MHLocalizedCatalogEntry DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MHLocalizedCatalogEntry DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MHLocalizedCatalogEntry ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHLocalizedCatalogEntry__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MHLocalizedCatalogEntry, MHLocalizedCatalogEntry.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHLocalizedCatalogEntry__FieldAccessorTable; }
    }
    
    public const int LanguageIdFieldNumber = 1;
    private bool hasLanguageId;
    private string languageId_ = "";
    public bool HasLanguageId {
      get { return hasLanguageId; }
    }
    public string LanguageId {
      get { return languageId_; }
    }
    
    public const int DescriptionFieldNumber = 2;
    private bool hasDescription;
    private string description_ = "";
    public bool HasDescription {
      get { return hasDescription; }
    }
    public string Description {
      get { return description_; }
    }
    
    public const int TitleFieldNumber = 3;
    private bool hasTitle;
    private string title_ = "";
    public bool HasTitle {
      get { return hasTitle; }
    }
    public string Title {
      get { return title_; }
    }
    
    public const int ImagedataFieldNumber = 4;
    private bool hasImagedata;
    private pb::ByteString imagedata_ = pb::ByteString.Empty;
    public bool HasImagedata {
      get { return hasImagedata; }
    }
    public pb::ByteString Imagedata {
      get { return imagedata_; }
    }
    
    public const int ReleaseDateFieldNumber = 5;
    private bool hasReleaseDate;
    private string releaseDate_ = "";
    public bool HasReleaseDate {
      get { return hasReleaseDate; }
    }
    public string ReleaseDate {
      get { return releaseDate_; }
    }
    
    public const int ItemPriceFieldNumber = 6;
    private bool hasItemPrice;
    private long itemPrice_;
    public bool HasItemPrice {
      get { return hasItemPrice; }
    }
    public long ItemPrice {
      get { return itemPrice_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasLanguageId) return false;
        if (!hasItemPrice) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _mHLocalizedCatalogEntryFieldNames;
      if (hasLanguageId) {
        output.WriteString(1, field_names[3], LanguageId);
      }
      if (hasDescription) {
        output.WriteString(2, field_names[0], Description);
      }
      if (hasTitle) {
        output.WriteString(3, field_names[5], Title);
      }
      if (hasImagedata) {
        output.WriteBytes(4, field_names[1], Imagedata);
      }
      if (hasReleaseDate) {
        output.WriteString(5, field_names[4], ReleaseDate);
      }
      if (hasItemPrice) {
        output.WriteInt64(6, field_names[2], ItemPrice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLanguageId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, LanguageId);
      }
      if (hasDescription) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Description);
      }
      if (hasTitle) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Title);
      }
      if (hasImagedata) {
        size += pb::CodedOutputStream.ComputeBytesSize(4, Imagedata);
      }
      if (hasReleaseDate) {
        size += pb::CodedOutputStream.ComputeStringSize(5, ReleaseDate);
      }
      if (hasItemPrice) {
        size += pb::CodedOutputStream.ComputeInt64Size(6, ItemPrice);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MHLocalizedCatalogEntry ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHLocalizedCatalogEntry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHLocalizedCatalogEntry ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHLocalizedCatalogEntry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHLocalizedCatalogEntry ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHLocalizedCatalogEntry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MHLocalizedCatalogEntry ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MHLocalizedCatalogEntry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MHLocalizedCatalogEntry ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHLocalizedCatalogEntry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MHLocalizedCatalogEntry MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MHLocalizedCatalogEntry prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MHLocalizedCatalogEntry, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MHLocalizedCatalogEntry cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MHLocalizedCatalogEntry result;
      
      private MHLocalizedCatalogEntry PrepareBuilder() {
        if (resultIsReadOnly) {
          MHLocalizedCatalogEntry original = result;
          result = new MHLocalizedCatalogEntry();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MHLocalizedCatalogEntry MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.MHLocalizedCatalogEntry.Descriptor; }
      }
      
      public override MHLocalizedCatalogEntry DefaultInstanceForType {
        get { return global::Gazillion.MHLocalizedCatalogEntry.DefaultInstance; }
      }
      
      public override MHLocalizedCatalogEntry BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MHLocalizedCatalogEntry) {
          return MergeFrom((MHLocalizedCatalogEntry) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MHLocalizedCatalogEntry other) {
        if (other == global::Gazillion.MHLocalizedCatalogEntry.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLanguageId) {
          LanguageId = other.LanguageId;
        }
        if (other.HasDescription) {
          Description = other.Description;
        }
        if (other.HasTitle) {
          Title = other.Title;
        }
        if (other.HasImagedata) {
          Imagedata = other.Imagedata;
        }
        if (other.HasReleaseDate) {
          ReleaseDate = other.ReleaseDate;
        }
        if (other.HasItemPrice) {
          ItemPrice = other.ItemPrice;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_mHLocalizedCatalogEntryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _mHLocalizedCatalogEntryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLanguageId = input.ReadString(ref result.languageId_);
              break;
            }
            case 18: {
              result.hasDescription = input.ReadString(ref result.description_);
              break;
            }
            case 26: {
              result.hasTitle = input.ReadString(ref result.title_);
              break;
            }
            case 34: {
              result.hasImagedata = input.ReadBytes(ref result.imagedata_);
              break;
            }
            case 42: {
              result.hasReleaseDate = input.ReadString(ref result.releaseDate_);
              break;
            }
            case 48: {
              result.hasItemPrice = input.ReadInt64(ref result.itemPrice_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLanguageId {
        get { return result.hasLanguageId; }
      }
      public string LanguageId {
        get { return result.LanguageId; }
        set { SetLanguageId(value); }
      }
      public Builder SetLanguageId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLanguageId = true;
        result.languageId_ = value;
        return this;
      }
      public Builder ClearLanguageId() {
        PrepareBuilder();
        result.hasLanguageId = false;
        result.languageId_ = "";
        return this;
      }
      
      public bool HasDescription {
        get { return result.hasDescription; }
      }
      public string Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = "";
        return this;
      }
      
      public bool HasTitle {
        get { return result.hasTitle; }
      }
      public string Title {
        get { return result.Title; }
        set { SetTitle(value); }
      }
      public Builder SetTitle(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTitle = true;
        result.title_ = value;
        return this;
      }
      public Builder ClearTitle() {
        PrepareBuilder();
        result.hasTitle = false;
        result.title_ = "";
        return this;
      }
      
      public bool HasImagedata {
        get { return result.hasImagedata; }
      }
      public pb::ByteString Imagedata {
        get { return result.Imagedata; }
        set { SetImagedata(value); }
      }
      public Builder SetImagedata(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasImagedata = true;
        result.imagedata_ = value;
        return this;
      }
      public Builder ClearImagedata() {
        PrepareBuilder();
        result.hasImagedata = false;
        result.imagedata_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasReleaseDate {
        get { return result.hasReleaseDate; }
      }
      public string ReleaseDate {
        get { return result.ReleaseDate; }
        set { SetReleaseDate(value); }
      }
      public Builder SetReleaseDate(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReleaseDate = true;
        result.releaseDate_ = value;
        return this;
      }
      public Builder ClearReleaseDate() {
        PrepareBuilder();
        result.hasReleaseDate = false;
        result.releaseDate_ = "";
        return this;
      }
      
      public bool HasItemPrice {
        get { return result.hasItemPrice; }
      }
      public long ItemPrice {
        get { return result.ItemPrice; }
        set { SetItemPrice(value); }
      }
      public Builder SetItemPrice(long value) {
        PrepareBuilder();
        result.hasItemPrice = true;
        result.itemPrice_ = value;
        return this;
      }
      public Builder ClearItemPrice() {
        PrepareBuilder();
        result.hasItemPrice = false;
        result.itemPrice_ = 0L;
        return this;
      }
    }
    static MHLocalizedCatalogEntry() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MarvelHeroesCatalogEntry : pb::GeneratedMessage<MarvelHeroesCatalogEntry, MarvelHeroesCatalogEntry.Builder> {
    private MarvelHeroesCatalogEntry() { }
    private static readonly MarvelHeroesCatalogEntry defaultInstance = new MarvelHeroesCatalogEntry().MakeReadOnly();
    private static readonly string[] _marvelHeroesCatalogEntryFieldNames = new string[] { "itemPrototypeGuids", "itemPrototypeRuntimeIdsForClient", "localizedEntries", "skuId", "type", "typeModifier" };
    private static readonly uint[] _marvelHeroesCatalogEntryFieldTags = new uint[] { 24, 64, 42, 8, 50, 58 };
    public static MarvelHeroesCatalogEntry DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MarvelHeroesCatalogEntry DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MarvelHeroesCatalogEntry ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MarvelHeroesCatalogEntry__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MarvelHeroesCatalogEntry, MarvelHeroesCatalogEntry.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MarvelHeroesCatalogEntry__FieldAccessorTable; }
    }
    
    public const int SkuIdFieldNumber = 1;
    private bool hasSkuId;
    private long skuId_;
    public bool HasSkuId {
      get { return hasSkuId; }
    }
    public long SkuId {
      get { return skuId_; }
    }
    
    public const int ItemPrototypeGuidsFieldNumber = 3;
    private pbc::PopsicleList<ulong> itemPrototypeGuids_ = new pbc::PopsicleList<ulong>();
    public scg::IList<ulong> ItemPrototypeGuidsList {
      get { return pbc::Lists.AsReadOnly(itemPrototypeGuids_); }
    }
    public int ItemPrototypeGuidsCount {
      get { return itemPrototypeGuids_.Count; }
    }
    public ulong GetItemPrototypeGuids(int index) {
      return itemPrototypeGuids_[index];
    }
    
    public const int ItemPrototypeRuntimeIdsForClientFieldNumber = 8;
    private pbc::PopsicleList<ulong> itemPrototypeRuntimeIdsForClient_ = new pbc::PopsicleList<ulong>();
    public scg::IList<ulong> ItemPrototypeRuntimeIdsForClientList {
      get { return pbc::Lists.AsReadOnly(itemPrototypeRuntimeIdsForClient_); }
    }
    public int ItemPrototypeRuntimeIdsForClientCount {
      get { return itemPrototypeRuntimeIdsForClient_.Count; }
    }
    public ulong GetItemPrototypeRuntimeIdsForClient(int index) {
      return itemPrototypeRuntimeIdsForClient_[index];
    }
    
    public const int LocalizedEntriesFieldNumber = 5;
    private pbc::PopsicleList<global::Gazillion.MHLocalizedCatalogEntry> localizedEntries_ = new pbc::PopsicleList<global::Gazillion.MHLocalizedCatalogEntry>();
    public scg::IList<global::Gazillion.MHLocalizedCatalogEntry> LocalizedEntriesList {
      get { return localizedEntries_; }
    }
    public int LocalizedEntriesCount {
      get { return localizedEntries_.Count; }
    }
    public global::Gazillion.MHLocalizedCatalogEntry GetLocalizedEntries(int index) {
      return localizedEntries_[index];
    }
    
    public const int TypeFieldNumber = 6;
    private bool hasType;
    private global::Gazillion.MHCatalogEntryType type_;
    public bool HasType {
      get { return hasType; }
    }
    public global::Gazillion.MHCatalogEntryType Type {
      get { return type_ ?? global::Gazillion.MHCatalogEntryType.DefaultInstance; }
    }
    
    public const int TypeModifierFieldNumber = 7;
    private pbc::PopsicleList<global::Gazillion.MHCatalogEntryTypeModifier> typeModifier_ = new pbc::PopsicleList<global::Gazillion.MHCatalogEntryTypeModifier>();
    public scg::IList<global::Gazillion.MHCatalogEntryTypeModifier> TypeModifierList {
      get { return typeModifier_; }
    }
    public int TypeModifierCount {
      get { return typeModifier_.Count; }
    }
    public global::Gazillion.MHCatalogEntryTypeModifier GetTypeModifier(int index) {
      return typeModifier_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSkuId) return false;
        foreach (global::Gazillion.MHLocalizedCatalogEntry element in LocalizedEntriesList) {
          if (!element.IsInitialized) return false;
        }
        if (HasType) {
          if (!Type.IsInitialized) return false;
        }
        foreach (global::Gazillion.MHCatalogEntryTypeModifier element in TypeModifierList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _marvelHeroesCatalogEntryFieldNames;
      if (hasSkuId) {
        output.WriteInt64(1, field_names[3], SkuId);
      }
      if (itemPrototypeGuids_.Count > 0) {
        output.WriteUInt64Array(3, field_names[0], itemPrototypeGuids_);
      }
      if (localizedEntries_.Count > 0) {
        output.WriteMessageArray(5, field_names[2], localizedEntries_);
      }
      if (hasType) {
        output.WriteMessage(6, field_names[4], Type);
      }
      if (typeModifier_.Count > 0) {
        output.WriteMessageArray(7, field_names[5], typeModifier_);
      }
      if (itemPrototypeRuntimeIdsForClient_.Count > 0) {
        output.WriteUInt64Array(8, field_names[1], itemPrototypeRuntimeIdsForClient_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSkuId) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, SkuId);
      }
      {
        int dataSize = 0;
        foreach (ulong element in ItemPrototypeGuidsList) {
          dataSize += pb::CodedOutputStream.ComputeUInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * itemPrototypeGuids_.Count;
      }
      {
        int dataSize = 0;
        foreach (ulong element in ItemPrototypeRuntimeIdsForClientList) {
          dataSize += pb::CodedOutputStream.ComputeUInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * itemPrototypeRuntimeIdsForClient_.Count;
      }
      foreach (global::Gazillion.MHLocalizedCatalogEntry element in LocalizedEntriesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, element);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, Type);
      }
      foreach (global::Gazillion.MHCatalogEntryTypeModifier element in TypeModifierList) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MarvelHeroesCatalogEntry ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MarvelHeroesCatalogEntry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MarvelHeroesCatalogEntry ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MarvelHeroesCatalogEntry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MarvelHeroesCatalogEntry ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MarvelHeroesCatalogEntry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MarvelHeroesCatalogEntry ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MarvelHeroesCatalogEntry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MarvelHeroesCatalogEntry ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MarvelHeroesCatalogEntry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MarvelHeroesCatalogEntry MakeReadOnly() {
      itemPrototypeGuids_.MakeReadOnly();
      itemPrototypeRuntimeIdsForClient_.MakeReadOnly();
      localizedEntries_.MakeReadOnly();
      typeModifier_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MarvelHeroesCatalogEntry prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MarvelHeroesCatalogEntry, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MarvelHeroesCatalogEntry cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MarvelHeroesCatalogEntry result;
      
      private MarvelHeroesCatalogEntry PrepareBuilder() {
        if (resultIsReadOnly) {
          MarvelHeroesCatalogEntry original = result;
          result = new MarvelHeroesCatalogEntry();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MarvelHeroesCatalogEntry MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.MarvelHeroesCatalogEntry.Descriptor; }
      }
      
      public override MarvelHeroesCatalogEntry DefaultInstanceForType {
        get { return global::Gazillion.MarvelHeroesCatalogEntry.DefaultInstance; }
      }
      
      public override MarvelHeroesCatalogEntry BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MarvelHeroesCatalogEntry) {
          return MergeFrom((MarvelHeroesCatalogEntry) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MarvelHeroesCatalogEntry other) {
        if (other == global::Gazillion.MarvelHeroesCatalogEntry.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSkuId) {
          SkuId = other.SkuId;
        }
        if (other.itemPrototypeGuids_.Count != 0) {
          result.itemPrototypeGuids_.Add(other.itemPrototypeGuids_);
        }
        if (other.itemPrototypeRuntimeIdsForClient_.Count != 0) {
          result.itemPrototypeRuntimeIdsForClient_.Add(other.itemPrototypeRuntimeIdsForClient_);
        }
        if (other.localizedEntries_.Count != 0) {
          result.localizedEntries_.Add(other.localizedEntries_);
        }
        if (other.HasType) {
          MergeType(other.Type);
        }
        if (other.typeModifier_.Count != 0) {
          result.typeModifier_.Add(other.typeModifier_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_marvelHeroesCatalogEntryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _marvelHeroesCatalogEntryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSkuId = input.ReadInt64(ref result.skuId_);
              break;
            }
            case 26:
            case 24: {
              input.ReadUInt64Array(tag, field_name, result.itemPrototypeGuids_);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.localizedEntries_, global::Gazillion.MHLocalizedCatalogEntry.DefaultInstance, extensionRegistry);
              break;
            }
            case 50: {
              global::Gazillion.MHCatalogEntryType.Builder subBuilder = global::Gazillion.MHCatalogEntryType.CreateBuilder();
              if (result.hasType) {
                subBuilder.MergeFrom(Type);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Type = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              input.ReadMessageArray(tag, field_name, result.typeModifier_, global::Gazillion.MHCatalogEntryTypeModifier.DefaultInstance, extensionRegistry);
              break;
            }
            case 66:
            case 64: {
              input.ReadUInt64Array(tag, field_name, result.itemPrototypeRuntimeIdsForClient_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSkuId {
        get { return result.hasSkuId; }
      }
      public long SkuId {
        get { return result.SkuId; }
        set { SetSkuId(value); }
      }
      public Builder SetSkuId(long value) {
        PrepareBuilder();
        result.hasSkuId = true;
        result.skuId_ = value;
        return this;
      }
      public Builder ClearSkuId() {
        PrepareBuilder();
        result.hasSkuId = false;
        result.skuId_ = 0L;
        return this;
      }
      
      public pbc::IPopsicleList<ulong> ItemPrototypeGuidsList {
        get { return PrepareBuilder().itemPrototypeGuids_; }
      }
      public int ItemPrototypeGuidsCount {
        get { return result.ItemPrototypeGuidsCount; }
      }
      public ulong GetItemPrototypeGuids(int index) {
        return result.GetItemPrototypeGuids(index);
      }
      public Builder SetItemPrototypeGuids(int index, ulong value) {
        PrepareBuilder();
        result.itemPrototypeGuids_[index] = value;
        return this;
      }
      public Builder AddItemPrototypeGuids(ulong value) {
        PrepareBuilder();
        result.itemPrototypeGuids_.Add(value);
        return this;
      }
      public Builder AddRangeItemPrototypeGuids(scg::IEnumerable<ulong> values) {
        PrepareBuilder();
        result.itemPrototypeGuids_.Add(values);
        return this;
      }
      public Builder ClearItemPrototypeGuids() {
        PrepareBuilder();
        result.itemPrototypeGuids_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<ulong> ItemPrototypeRuntimeIdsForClientList {
        get { return PrepareBuilder().itemPrototypeRuntimeIdsForClient_; }
      }
      public int ItemPrototypeRuntimeIdsForClientCount {
        get { return result.ItemPrototypeRuntimeIdsForClientCount; }
      }
      public ulong GetItemPrototypeRuntimeIdsForClient(int index) {
        return result.GetItemPrototypeRuntimeIdsForClient(index);
      }
      public Builder SetItemPrototypeRuntimeIdsForClient(int index, ulong value) {
        PrepareBuilder();
        result.itemPrototypeRuntimeIdsForClient_[index] = value;
        return this;
      }
      public Builder AddItemPrototypeRuntimeIdsForClient(ulong value) {
        PrepareBuilder();
        result.itemPrototypeRuntimeIdsForClient_.Add(value);
        return this;
      }
      public Builder AddRangeItemPrototypeRuntimeIdsForClient(scg::IEnumerable<ulong> values) {
        PrepareBuilder();
        result.itemPrototypeRuntimeIdsForClient_.Add(values);
        return this;
      }
      public Builder ClearItemPrototypeRuntimeIdsForClient() {
        PrepareBuilder();
        result.itemPrototypeRuntimeIdsForClient_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Gazillion.MHLocalizedCatalogEntry> LocalizedEntriesList {
        get { return PrepareBuilder().localizedEntries_; }
      }
      public int LocalizedEntriesCount {
        get { return result.LocalizedEntriesCount; }
      }
      public global::Gazillion.MHLocalizedCatalogEntry GetLocalizedEntries(int index) {
        return result.GetLocalizedEntries(index);
      }
      public Builder SetLocalizedEntries(int index, global::Gazillion.MHLocalizedCatalogEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.localizedEntries_[index] = value;
        return this;
      }
      public Builder SetLocalizedEntries(int index, global::Gazillion.MHLocalizedCatalogEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.localizedEntries_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLocalizedEntries(global::Gazillion.MHLocalizedCatalogEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.localizedEntries_.Add(value);
        return this;
      }
      public Builder AddLocalizedEntries(global::Gazillion.MHLocalizedCatalogEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.localizedEntries_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLocalizedEntries(scg::IEnumerable<global::Gazillion.MHLocalizedCatalogEntry> values) {
        PrepareBuilder();
        result.localizedEntries_.Add(values);
        return this;
      }
      public Builder ClearLocalizedEntries() {
        PrepareBuilder();
        result.localizedEntries_.Clear();
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::Gazillion.MHCatalogEntryType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::Gazillion.MHCatalogEntryType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder SetType(global::Gazillion.MHCatalogEntryType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = builderForValue.Build();
        return this;
      }
      public Builder MergeType(global::Gazillion.MHCatalogEntryType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasType &&
            result.type_ != global::Gazillion.MHCatalogEntryType.DefaultInstance) {
            result.type_ = global::Gazillion.MHCatalogEntryType.CreateBuilder(result.type_).MergeFrom(value).BuildPartial();
        } else {
          result.type_ = value;
        }
        result.hasType = true;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::Gazillion.MHCatalogEntryTypeModifier> TypeModifierList {
        get { return PrepareBuilder().typeModifier_; }
      }
      public int TypeModifierCount {
        get { return result.TypeModifierCount; }
      }
      public global::Gazillion.MHCatalogEntryTypeModifier GetTypeModifier(int index) {
        return result.GetTypeModifier(index);
      }
      public Builder SetTypeModifier(int index, global::Gazillion.MHCatalogEntryTypeModifier value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.typeModifier_[index] = value;
        return this;
      }
      public Builder SetTypeModifier(int index, global::Gazillion.MHCatalogEntryTypeModifier.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.typeModifier_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTypeModifier(global::Gazillion.MHCatalogEntryTypeModifier value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.typeModifier_.Add(value);
        return this;
      }
      public Builder AddTypeModifier(global::Gazillion.MHCatalogEntryTypeModifier.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.typeModifier_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTypeModifier(scg::IEnumerable<global::Gazillion.MHCatalogEntryTypeModifier> values) {
        PrepareBuilder();
        result.typeModifier_.Add(values);
        return this;
      }
      public Builder ClearTypeModifier() {
        PrepareBuilder();
        result.typeModifier_.Clear();
        return this;
      }
    }
    static MarvelHeroesCatalogEntry() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
